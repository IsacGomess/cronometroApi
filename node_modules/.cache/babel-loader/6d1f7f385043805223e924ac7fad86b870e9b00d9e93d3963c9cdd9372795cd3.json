{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isacf\\\\Documents\\\\projetoCronometro\\\\cronometro\\\\src\\\\relogio.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useStopwatch } from 'react-timer-hook';\nimport { Howl } from 'howler';\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relogio = props => {\n  _s();\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    reset\n  } = useStopwatch({\n    autoStart: false\n  });\n  const beep = useRef(new Howl({\n    src: ['blip-131856.mp3']\n  }));\n  // current é um método do use.Ref() que não precisa de uma nova randeriação e  torna o variável mutável.\n  const playBeep = () => {\n    beep.current.play();\n  };\n  const frase = useRef(props.Api);\n  const playFrase = frase.current;\n  // problema - verificar a variável minuto chegando a um minuto realizar um sinal sonoro e cheando a 2 min outro sinal sonoro\n  // problema menor emitir um sinal quando o tempo parar\n  // use efect tornando executa a toda vez que a condição é disparada. \n  useEffect(() => {\n    if (minutes > 0 && minutes % 1 === 0) {\n      playBeep();\n      playFrase;\n    }\n  }, [minutes, playFrase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"frase \", playFrase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '100px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 50\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isRunning ? 'Running' : 'Not running'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pause,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Relogio, \"f8sn3KUhDF+Evu24s455s1nseHk=\", false, function () {\n  return [useStopwatch];\n});\n_c = Relogio;\nexport default Relogio;\nvar _c;\n$RefreshReg$(_c, \"Relogio\");","map":{"version":3,"names":["React","useStopwatch","Howl","useRef","useEffect","jsxDEV","_jsxDEV","Relogio","props","_s","seconds","minutes","hours","days","isRunning","start","pause","reset","autoStart","beep","src","playBeep","current","play","frase","Api","playFrase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","onClick","_c","$RefreshReg$"],"sources":["C:/Users/isacf/Documents/projetoCronometro/cronometro/src/relogio.js"],"sourcesContent":["import React from  'react';\r\nimport { useStopwatch } from 'react-timer-hook';\r\nimport {Howl} from 'howler';\r\nimport { useRef,useEffect} from 'react';\r\n\r\nconst Relogio = (props) => {\r\n  const{\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    reset,\r\n  } = useStopwatch({ autoStart: false }) \r\n  \r\n  const beep = useRef(new Howl({src:['blip-131856.mp3'],}))\r\n  // current é um método do use.Ref() que não precisa de uma nova randeriação e  torna o variável mutável.\r\n  const playBeep = () =>{\r\n    beep.current.play();\r\n  } \r\n\r\n  const frase  = useRef(props.Api)\r\n  const playFrase = frase.current\r\n  // problema - verificar a variável minuto chegando a um minuto realizar um sinal sonoro e cheando a 2 min outro sinal sonoro\r\n  // problema menor emitir um sinal quando o tempo parar\r\n  // use efect tornando executa a toda vez que a condição é disparada. \r\n  useEffect(()=>{ \r\n    if(minutes > 0 &&  minutes % 1 === 0){\r\n      playBeep();\r\n      playFrase;\r\n    }\r\n    \r\n  },[minutes,playFrase])\r\n  return (\r\n    <div className='tc'>\r\n      <p>frase {playFrase}</p>\r\n      <div style={{fontSize: '100px'}}>\r\n        <span>{days}</span>:<span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <p>{isRunning ? 'Running' : 'Not running'}</p>\r\n      <button onClick={start}>Start</button>\r\n      <button onClick={pause}>Pause</button>\r\n      <button onClick={reset}>Reset</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Relogio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}