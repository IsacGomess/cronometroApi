{"version":3,"sources":["components/relogio.js","components/api.js","App.js","reportWebVitals.js","index.js","logo_transparent.png"],"names":["Relogio","seconds","minutes","hours","days","isRunning","start","pause","reset","useStopwatch","autoStart","beep","useRef","Howl","src","useEffect","current","play","prase","setFrase","useState","React","createElement","className","style","fontSize","onClick","async","newP","response","fetch","json","text","error","console","Api","App","Logo","alt","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","p"],"mappings":"oMAwDeA,MAlDCA,KACd,MAAKC,QACHA,EAAOC,QACPA,EAAOC,MACPA,EAAKC,KACLA,EAAIC,UACJA,EAASC,MACTA,EAAKC,MACLA,EAAKC,MACLA,GACEC,uBAAa,CAAEC,WAAW,IAExBC,EAAOC,iBAAO,IAAIC,OAAK,CAACC,IAAI,CAAC,sBAQnCC,oBAAU,KACLb,EAAU,GAAMA,EAAU,IAAM,GANnCS,EAAKK,QAAQC,QAUb,CAACf,IAEH,MAAOgB,EAAOC,GAAYC,mBAAS,IAOnC,OACEC,IAAAC,cAAA,OAAKC,UAAU,MACbF,IAAAC,cAAA,OAAKC,UAAU,QAAQC,MAAO,CAACC,SAAU,UACvCJ,IAAAC,cAAA,YAAOlB,GAAY,IAACiB,IAAAC,cAAA,YAAOnB,GAAa,IAACkB,IAAAC,cAAA,YAAOpB,GAAe,IAACmB,IAAAC,cAAA,YAAOrB,IAEzEoB,IAAAC,cAAA,SAAIjB,EAAY,UAAY,QAC5BgB,IAAAC,cAAA,UAAQC,UAAU,yCAAyCG,QAASpB,GAAO,SAC3Ee,IAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAASnB,GAAO,SAC7Ec,IAAAC,cAAA,UAAQC,UAAU,uCAAuCG,QAASlB,GAAO,SACzEa,IAAAC,cAAA,KAAGC,UAAU,SAAQ,8BACrBF,IAAAC,cAAA,KAAGC,UAAU,SAASL,GACtBG,IAAAC,cAAA,UAAQC,UAAW,kEAAkEG,QAhBrEC,UAClB,MAAMC,OCpCUD,WAChB,IACI,MAAME,QAAiBC,MAAM,0CAE7B,aADoBD,EAASE,QACjBC,KACd,MAAMC,GAEJ,OADAC,QAAQD,MAAM,6BAA6BA,GACpC,+BD6BQE,GACnBhB,EAASS,KAcoG,yCEpClGQ,MAVHA,IAGJf,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,SAAGD,IAAAC,cAAA,OAAKC,UAAU,OAAOT,IAAKuB,IAAMC,IAAI,UACxCjB,IAAAC,cAAA,KAAGC,UAAU,SAAQ,wCACrBF,IAAAC,cAACtB,EAAO,OCCLuC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,YCCDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnC,IAAAC,cAACD,IAAMoC,WAAU,KACfpC,IAAAC,cAACc,EAAG,QAORG,uBClBAmB,EAAAC,QAAiBjB,EAAAkB,EAAuB","file":"static/js/main.f22b6bc4.chunk.js","sourcesContent":["import React from  'react';\r\nimport { useStopwatch } from 'react-timer-hook';\r\nimport {Howl} from 'howler';\r\nimport { useRef,useEffect,useState} from 'react';\r\nimport {Api} from './api'\r\n\r\nconst Relogio = () => {\r\n  const{\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    reset,\r\n  } = useStopwatch({ autoStart: false }) \r\n  \r\n  const beep = useRef(new Howl({src:['blip-131856.mp3'],}))\r\n  // current é um método do use.Ref() que não precisa de uma nova randeriação e  torna o variável mutável.\r\n  const playBeep = () =>{\r\n    beep.current.play();\r\n  } \r\n  // problema - verificar a variável minuto chegando a um minuto realizar um sinal sonoro e cheando a 2 min outro sinal sonoro\r\n  // problema menor emitir um sinal quando o tempo parar\r\n  // use efect tornando executa a toda vez que a condição é disparada. \r\n  useEffect(()=>{ \r\n    if(minutes > 0 &&  minutes % 1 === 0){\r\n      playBeep();\r\n\r\n    }\r\n  },[minutes])\r\n  // atualizando os ganchos com useState\r\n  const [prase, setFrase] = useState('')\r\n  // ultilizando uma função através do botão para reproduzir outra função api\r\n  const updatePrase = async () => {\r\n    const newP = await Api()\r\n    setFrase(newP)\r\n  }\r\n\r\n  return (\r\n    <div className='tc'>\r\n      <div className='green' style={{fontSize: '100px'}}>\r\n        <span>{days}</span>:<span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <p>{isRunning ? 'Running' : 'stop'}</p>\r\n      <button className='ma2 pa3 pointer bg-green white br-pill' onClick={start}>Start</button>\r\n      <button className='ma2 pa3  pointer black bg-yellow br-pill' onClick={pause}>Pause</button>\r\n      <button className='ma2 pa3 pointer white bg-red br-pill' onClick={reset}>Reset</button>\r\n      <p className='white'>Curiosidades Históricas</p>\r\n      <p className='white'>{prase}</p>\r\n      <button className= 'w-auto f5 bg-light-grey black hover-bg-green pointer br4 o-410 ' onClick={updatePrase}>História</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Relogio;\r\n","export const Api =  async ()  => {\r\n    try{\r\n        const response = await fetch('http://numbersapi.com/random/year?json')\r\n        const data =  await response.json()\r\n        return data.text;\r\n    } catch(error) {\r\n        console.error(\"Error to search new phrase\"+error);\r\n        return 'Error to search new phrase';\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Relogio from './components/relogio'\r\nimport './App.css'\r\nimport  Logo from'./logo_transparent.png'\r\n\r\nconst App = () =>{\r\n\r\n    return(\r\n        <div className=\"tc\">\r\n            <p><img className=\"w-20\" src={Logo} alt=\"logo\"/></p>\r\n            <p className='white'>Recurso de sonoro a cada 1 minuto...</p>\r\n            <Relogio/>     \r\n        </div>\r\n    )\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport 'howler'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.6225992b.png\";"],"sourceRoot":""}